volumes:
  postgres-data:
  pg-admin:
  mongo-data:
  dynamodb-data:

services:
  postgres:
    image: postgres:14.5-bullseye
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: user
      POSTGRES_DB: postgres-data
    ports:
      - 15432:5432

  pg-admin:
    image: dpage/pgadmin4
    volumes:
      - pg-admin:/var/lib/pgadmin
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: user@user.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_DISABLE_POSTFIX: 1

  mongo:
    image: mongo
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017

  dynamodb-local:
    image: amazon/dynamodb-local
    volumes:
      - dynamodb-data:/home/dynamodblocal/data
    ports:
      - 8000:8000

  express-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://user:${POSTGRES_PASSWORD}@postgres/postgres-data
      MONGO_URI: mongodb://mongo:27017/joule-box-db
      DYNAMODB_ENDPOINT: http://dynamodb-local:8000
      CORS_HOST: http://localhost:3000
    ports:
      - 8001:8000
    volumes:
      - ./api:/app
    depends_on:
      - postgres
      - pg-admin
      - mongo
      - dynamodb-local

  react-app:
    build:
      context: ./ghi
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - express-api

  localstack:
    image: localstack/localstack
    ports:
      - "4566-4597:4566-4597"
    environment:
      - SERVICES=lambda,s3,cloudwatch,logs
      - DEBUG=1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - dynamodb-local
